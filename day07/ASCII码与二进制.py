#-*- coding:utf-8 -*-
#ASCII 是包含了字母、数字、常用的符号等对应的十进制组成的一张表，总共包含256个，为了是将字母、数字、常用符号进行转换。
#但是在我们的计算机中不仅仅包含ASCII中所用的字符，还有中文，如何将中文和二进制进行转换呢？
#计算机如何把文字转换为二进制
#文字转换为二进制需要先转十进制再转二进制，所以才有ASCII码表的产生。

#将下面的字符转换为二进制
# 请将#Alex 按照ASCII码表转换为二进制
# #对应ASCII中的51
# A对应ASCII中的65
# l对应ASCII中的108
# e对应ASCII中的101
# x对应ASCII中的120
a = bin(51)
b = bin(65)
c = bin(108)
d = bin(101)
e = bin(120)
print(a)#0b110011
print(b)#0b1000001
print(c)#0b1101100
print(d)#0b1100101
print(e)#0b1111000
#计算机如何区别哪个为#，A，这个时候需要给出固定长度，就是把所有的二进制都转换为8位，不够的用0补充。
#每一位0或者1所占的空间为bit，这是计算机最小的表示单位。
#8bit=1bytes（字节）
#所以#Alex的最终表示法为00110011 01000001 01101100 01100101 01111000

# 1KB = 1024B
#字符编码
# 1、ASCII编码
# 2、GB2312国标编码，支持中文
# 3、GBK 1.0,不仅支持中文还有中日韩中的中文
# 4、GB18030 增加了朝鲜语
# 5、台湾地区 也自己搞了一套编码为BIG5,繁体字

#为了解决各个国家地区不同的编码问题，国际标准组织ISO定义了一个万国码：Unicode编码
#规定所有的字符、符号都用16位来表示，2**16=65536，之
# 前的ASCII为8位表示一个字符或者符号，现在是16位，明显增加了内存，导致计算机容量内存过大。

#为了解决16位的问题，又规定了一套新的编码，也就是我们常用的utf-8,他不在最少使用两个字节，而是将原有的字符符号分类，
#ASCII中的用一个字节，欧洲字符用两个字节，东亚的用三个字节保存。

#windows系统中文版默认的编码为GBK
#Mac OS,Linux默认是UTF-8

